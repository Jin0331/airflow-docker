---
version: '3'
x-airflow-common:
  &airflow-common
  # image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.1.0}
  image: sempre813/airflow-custom:2.1-stable
  hostname: ${HOSTNAME}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CELERY__WORKER_CONCURRENCY: ${CONCURRENCY:-4}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@${MASTER_HOST:-192.168.0.5}/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@${MASTER_HOST:-192.168.0.5}/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@${MASTER_HOST:-192.168.0.5}:6379/0
    AIRFLOW__CORE__FERNET_KEY: 'Yl0qfUhez3O8cn8gS418WfnAoegsRSIa2oSPwOIc69s='
    AIRFLOW__WEBSERVER__SECRET_KEY: b'\x13\x9b\xe1~\xab\x01\xa1\x867\xeam\x8d}\x8c\xef<'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__DEFAULT_TIMEZONE: Asia/Seoul
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__OPERATORS__DEFAULT_QUEUE: ${QUEUE:-default}
  extra_hosts:
    - "targetid:192.168.0.5"
    - "wmbio:192.168.0.6"
    - "macmini.local:192.168.0.7"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
  # user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  user: root
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    ports:
      - 8793:8793
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  docker-proxy:
    image: bobrik/socat
    command: "TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock"
    ports:
      - "2376:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock



volumes:
  postgres-db-volume:
